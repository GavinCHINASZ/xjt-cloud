<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xjt.cloud.iot.core.dao.iot.electricalFire.ElectricalFireDeviceDao">

    <resultMap id="electricalFireResultMap" type="com.xjt.cloud.iot.core.entity.electrical.ElectricalFireDevice">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="project_id" property="projectId" jdbcType="BIGINT"/>
        <result column="leakage_curr_value" property="leakageCurrValue" jdbcType="VARCHAR"/>
        <result column="temp_value" property="tempValue" jdbcType="VARCHAR"/>
        <result column="work_status" property="workStatus" jdbcType="INTEGER"/>
        <result column="device_id" property="deviceId" jdbcType="BIGINT"/>
        <result column="device_name" property="deviceName" jdbcType="VARCHAR"/>
        <result column="device_location" property="deviceLocation" jdbcType="VARCHAR"/>
        <result column="end_heartbeat_time" property="endHeartbeatTime" jdbcType="TIMESTAMP"/>
        <result column="point_qr_no" property="pointQrNo" jdbcType="VARCHAR"/>
        <result column="device_qr_no" property="deviceQrNo" jdbcType="VARCHAR"/>
        <result column="sensor_no" property="sensorNo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="device_status" property="deviceStatus" jdbcType="INTEGER"/>
        <result column="building_name" property="buildingName" jdbcType="VARCHAR"/>
        <result column="floor_name" property="floorName" jdbcType="VARCHAR"/>
        <result column="building_id" property="buildingId" jdbcType="BIGINT"/>
        <result column="floor_id" property="floorId" jdbcType="BIGINT"/>
        <result column="check_point_id" property="checkPointId" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="sqlWhere">
        <where>
            efd.status &lt; 99
            <if test="projectId != null and projectId != 0">
                AND efd.project_id = #{projectId}
            </if>
            <if test="pointQrNo != null and pointQrNo != ''">
                AND cp.qr_no = #{pointQrNo}
            </if>
            <if test="deviceQrNo != null and deviceQrNo != ''">
                AND d.qr_no = #{deviceQrNo}
            </if>
            <if test="sensorNo != null and sensorNo != ''">
                AND efd.sensor_no = #{sensorNo}
            </if>
            <if test="buildingId != null and buildingId != 0">
                AND cp.building_id = #{buildingId}
            </if>
            <if test="floorId != null and floorId != 0">
                AND cp.building_floor_id = #{floorId}
            </if>
            <if test=" id != null and id != 0">
                AND efd.id = #{id}
            </if>
            <if test="deviceStatus != null">
                AND efd.device_status = #{deviceStatus}
            </if>
            <if test="workStatus != null">
                AND efd.work_status = #{workStatus}
            </if>
            <if test="ids != null and ids.length != 0">
                AND efd.id IN
                <foreach collection="ids" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <!--根据条件查询电气火灾设备列表-->
    <select id="findElectricalFireDeviceList" parameterType="ElectricalFireDevice" resultType="ElectricalFireDevice">
        SELECT
        efd.id,efd.project_id projectId,efd.leakage_curr_value leakageCurrValue,efd.temp_value tempValue,
        efd.work_status workStatus,
        efd.device_id deviceId, dt.device_sys_name deviceName,cp.point_location deviceLocation,efd.end_heartbeat_time
        endHeartbeatTime,
        cp.qr_no pointQrNo, d.qr_no deviceQrNo, efd.sensor_no sensorNo, efd.create_time createTime,efd.check_point_id
        checkPointId,
        cp.building_id buildingId, cp.building_floor_id floorId, efd.device_status deviceStatus
        FROM e_electrical_fire_device efd
        INNER JOIN device_manage.d_device d
        ON efd.device_id = d.id AND d.status &lt;= 98
        INNER JOIN device_manage.d_device_type dt
        ON d.device_type_id = dt.id AND dt.status &lt;= 98
        INNER JOIN device_manage.d_check_point cp
        ON cp.status &lt;= 98 AND cp.id = efd.check_point_id
        <include refid="sqlWhere"></include>
        GROUP BY efd.id
        <include refid="CommonSqlDao.commonPagingHandle"/>
    </select>

    <!--更新电气火灾设备信息-->
    <update id="modifyElectricalFireDevice" parameterType="ElectricalFireDevice">
        UPDATE e_electrical_fire_device
        <set>
            <if test="deviceId != null and deviceId != 0">
                device_id = #{deviceId},
            </if>
            <if test="leakageCurrValue != null and leakageCurrValue != ''">
                leakage_curr_value = #{leakageCurrValue},
            </if>
            <if test="tempValue != null and tempValue != ''">
                temp_value = #{tempValue},
            </if>
            <if test="sensorNo != null and sensorNo != ''">
                sensor_no = #{sensorNo},
            </if>
            <if test="checkPointId != null and checkPointId != 0">
                check_point_id = #{checkPointId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="updateUserId != null and updateUserId != 0">
                update_user_id = #{updateUserId},
                update_time = NOW()
            </if>
        </set>
        WHERE
        <if test="id != null and id != 0">
            id = #{id}
        </if>
        <if test="ids != null and ids.length != 0">
            id IN
            <foreach collection="ids" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </update>

    <!--插入电气火灾设备信息-->
    <insert id="saveElectricalFireDevice" parameterType="ElectricalFireDevice" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO e_electrical_fire_device
            (project_id, device_id, leakage_curr_value, temp_value, work_status, sensor_no, create_time, status, device_status, check_point_id)
        VALUES
            (#{projectId}, #{deviceId}, #{leakageCurrValue}, #{tempValue},2, #{sensorNo}, NOW(), 0, 1, #{checkPointId});
    </insert>

    <!-- 查询火警主机设备数量 -->
    <select id="findElectricalFireDeviceCount" parameterType="ElectricalFireDevice" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT efd.id) totalCount
        FROM e_electrical_fire_device efd
        INNER JOIN device_manage.d_device d ON efd.device_id = d.id AND d.status &lt;= 98
        INNER JOIN device_manage.d_device_type dt ON d.device_type_id = dt.id AND dt.status &lt;= 98
        INNER JOIN device_manage.d_check_point cp ON cp.status &lt;= 98 AND cp.id = efd.check_point_id
        <include refid="sqlWhere"></include>
    </select>

    <!--根据条件查询电气火灾设备-->
    <select id="findElectricalFireDevice" parameterType="ElectricalFireDevice" resultType="ElectricalFireDevice">
        SELECT
            efd.id,efd.project_id projectId,efd.leakage_curr_value leakageCurrValue,efd.temp_value tempValue,
            efd.work_status workStatus,
            efd.device_id deviceId, dt.device_sys_name deviceName,cp.point_location deviceLocation,efd.end_heartbeat_time
            endHeartbeatTime,
            cp.qr_no pointQrNo, d.qr_no deviceQrNo, efd.sensor_no sensorNo, efd.create_time createTime,efd.check_point_id checkPointId,
            cp.building_id buildingId, cp.building_floor_id floorId, efd.device_status deviceStatus,efd.send_message sendMessage
        FROM e_electrical_fire_device efd
        INNER JOIN device_manage.d_device d
        ON efd.device_id = d.id AND d.status &lt;= 98
        INNER JOIN device_manage.d_device_type dt
        ON d.device_type_id = dt.id AND dt.status &lt;= 98
        INNER JOIN device_manage.d_check_point cp
        ON cp.status &lt;= 98 AND cp.id = efd.check_point_id
        <include refid="sqlWhere"></include>
        GROUP BY efd.id
        LIMIT 1
    </select>

    <!-- 查询火警主机设备数量 -->
    <select id="findElectricalFireDeviceStatusCount" parameterType="ElectricalFireReport"
            resultType="ElectricalFireReport">
        SELECT
            COUNT(DISTINCT efd.id) deviceTotalCount, SUM(IF(efd.work_status = 1,1,0)) deviceOnLineCount
        FROM e_electrical_fire_device efd
        INNER JOIN device_manage.d_device d
        ON efd.device_id = d.id AND d.status &lt;= 98
        INNER JOIN device_manage.d_device_type dt
        ON d.device_type_id = dt.id AND dt.status &lt;= 98
        INNER JOIN device_manage.d_check_point cp
        ON cp.status &lt;= 98 AND cp.id = efd.check_point_id
        WHERE efd.project_id = #{projectId} AND efd.status &lt;= 98
    </select>

    <!--更新电气火灾设备心跳时间-->
    <update id="modifyElectricalFireDeviceStatus" parameterType="ElectricalFireDevice">
        UPDATE e_electrical_fire_device
        <set>
            <if test="workStatus != null">
                work_status = #{workStatus},
                end_heartbeat_time = NOW(),
                send_message = #{sendMessage},
            </if>
            <if test="deviceStatus != null">
                device_status = #{deviceStatus},
            </if>
        </set>
        WHERE
        <if test="id != null and id != 0">
            id = #{id}
        </if>
    </update>

    <!-- 查询所有的电气火灾设备 -->
    <select id="findAllElectricalFireDevice" resultType="ElectricalFireDevice">
        SELECT
            efd.id,efd.project_id projectId,efd.leakage_curr_value leakageCurrValue,efd.temp_value tempValue, efd.work_status workStatus,
            efd.device_id deviceId, dt.device_sys_name deviceName,cp.point_location deviceLocation,efd.end_heartbeat_time endHeartbeatTime,
            cp.qr_no pointQrNo, d.qr_no deviceQrNo, efd.sensor_no sensorNo, efd.create_time createTime,efd.check_point_id checkPointId,
            cp.building_id buildingId, cp.building_floor_id floorId, efd.device_status deviceStatus
        FROM e_electrical_fire_device efd
        INNER JOIN device_manage.d_device d ON efd.device_id = d.id AND d.status &lt;= 98
        INNER JOIN device_manage.d_device_type dt ON d.device_type_id = dt.id AND dt.status &lt;= 98
        INNER JOIN device_manage.d_check_point cp ON cp.status &lt;= 98 AND cp.id = efd.check_point_id
        WHERE efd.status &lt;= 98
        GROUP BY efd.id
    </select>

    <!--更新电气火灾设备心跳时间-->
    <update id="modifyElectricalFireWorkStatus" parameterType="ElectricalFireDevice">
        UPDATE e_electrical_fire_device
        <set>
            work_status = #{workStatus},
            send_message = #{sendMessage}
        </set>
        WHERE
        <if test="id != null and id != 0">
            id = #{id}
        </if>
    </update>

</mapper>
